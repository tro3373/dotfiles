#!/usr/bin/env bash

readonly usr_local_go=/usr/local/go

is_installed() {
  if is_ubuntu; then
    test -e $usr_local_go
  else
    # shellcheck disable=SC2154
    has "$app"
  fi
}

_go_latest() {
  goenv install -l | grep -v beta | tail -1 | awk '{print $1}'
}
install_common() {
  # setup for posix system
  if ! has goenv; then
    echo "No goenv exist. install it." 1>&2
    return
  fi
  local version
  version=$(_go_latest)
  if [[ -z $version ]]; then
    log "No version exist"
    exit 1
  fi
  exe goenv install "$version"
  exe goenv global "$version"
  exe goenv rehash
  exe go version
}

install_arch() {
  if has snap; then
    exe sudo snap install go --classic
  else
    install_via_os_default
  fi
}

install_mac() {
  install_via_os_default
}

install_ubuntu() {
  # exe sudo add-apt-repository -y ppa:longsleep/golang-backports
  # exe sudo apt update -y
  # exe sudo apt install -y golang-go
  if [[ -e $usr_local_go ]]; then
    if ! is_force; then
      return
    fi
    exe rm -rf $usr_local_go
  fi
  local _url
  _url="https://dl.google.com/go/$(curl -fSsL "https://golang.org/VERSION?m=text" | head -1).linux-amd64.tar.gz"
  dl_untar "$_url" $usr_local_go 1
}

install_msys() {
  def_install mingw-w64-x86_64-go
  # exe scoop install go
}
install_cygwin() {
  not_supported
}

setting_common() {
  local _gobin=$HOME/go/bin
  make_dir_if_needed "$_gobin"
  # if grep "GOPATH" ~/.works.zsh >&/dev/null; then
  #   return
  # fi
  # exe "echo 'export GOPATH=\$HOME/go' >> ~/.works.zsh"
  # exe "echo 'add_path \$GOPATH/bin' >> ~/.works.zsh"
  # rm_dotpath
  _cat_add_settings | cat_you_need_to ~/.works.zsh
}

_cat_add_settings() {
  cat <<'EOF'
export GOPATH=$HOME/go
add_path $GOPATH/bin
EOF
}

# install_common() { not_supported; }
# install_wsl()    { not_supported; }
# install_arch()   { not_supported; }
# install_msys()   { not_supported; }
# install_cygwin() { not_supported; }
# install_mac()    { not_supported; }
# install_ubuntu() { not_supported; }
# install_redhat() { not_supported; }
# setting_common() { not_supported; }
# setting_wsl()    { not_supported; }
# setting_arch()   { not_supported; }
# setting_msys()   { not_supported; }
# setting_cygwin() { not_supported; }
# setting_mac()    { not_supported; }
setting_ubuntu() {
  exe "echo 'add_path $usr_local_go/bin' >> ~/.works.zsh"
  setting_common
}
# setting_redhat() { not_supported; }
# #is_installed
# #install_via_os_default
# #def_install
# #is_debug
# #is_dry
# #log
# #dlog
# #not_supported
# #make_link_dot2home
# #make_lnk_with_bkup
# #cd_work
# #make_work_if_needed
# #dl
# #dl_unzip
# #dl_untar
# #github
# #github_user_local
# #sudo_tee
