snippet     filename
alias       fname
    `expand("%")`

snippet     fullfilename
alias       ffname
    `substitute(expand("%:p"), '\', '/', "g")`

snippet devnull
alias tonull
    &> /dev/null

snippet error
alias toerror
    1>&2

snippet script_dir
    script_dir=$(cd $(dirname \$0); pwd)

snippet script_real_dir
    script_dir=$(cd $(dirname $(readlink -f \$0)); pwd)


snippet dotbin
    dotbin=${DOTPATH:-~/.dot}/bin

snippet while_read_line
    while read -r line; do
        [[ -z \$line ]] && continue
        [[ \$line =~ ^#.* ]] && continue
    done

snippet readwhil
alias rea
    while [[ "$$input_word" == "" ]]; do
        echo "$$msg"
        read input_word
    done

snippet has
    has() { which \${1} >& /dev/null; }

snippet usage
    command_name=$(basename \$0)
    usage() {
        cat <<EOF
    Description for this command.
      Usage:
          $command_name [option]
        Options
          -h|--help : Show this usage
    EOF
    }

snippet isfileexists
    is_file_exists() {
        [ -f "$${0:1}" ]
    }
    if is_file_exists ${1:#:search_file}; then
        echo "already exist"
    else
        echo "no exist"
    fi

snippet confirm
    confirm() {
        message=\${1:-"Are you ready?"}
        message="${message} (y/N)"
        echo -e "$message"
        read yesno
        if [[ ! "$yesno" =~ (y|Y) ]]; then
            echo "==> proc canceled. terminate this proc."
            exit 1
        fi
    }

snippet interactive1
    interactive1() {
        local variable=$1
        local msg=$2
        local input_word=
        local yesno=x
        while [[ "$input_word" == "" ]]; do
            echo "$msg"
            read input_word
        done
        eval "$variable=$input_word"
    }

snippet interactive2
    interactive2() {
        local variable=$1
        local msg=$2
        local input_word=
        local yesno=x
        while [[ "$input_word" == "" ]]; do
            echo "$msg"
            read input_word
            echo
            while [[ ! "$yesno" =~ [yYnN]  ]]; do
                echo "Are you ok?(y/N) input: ${input_word}"
                read yesno
            done
            if [[ $yesno =~ [nN] ]]; then
                input_word=
                yesno=
            else
                break
            fi
        done
        eval "$variable=$input_word"
    }

snippet shebang
alias envvvv
    #!/usr/bin/env bash


snippet case
alias switch
    case "$arg" in
        -h|--help|--help*) ;;
        *) ;;
    esac

snippet date_time
    date_time=$(date +%Y%m%d%H%M%S)

snippet readuser
    read -p  "user: " user

snippet readpass
    read -sp "pass: " pass

snippet install_setup_template
    install_common() { not_supported; }
    install_arch()   { not_supported; }
    install_msys()   { not_supported; }
    install_cygwin() { not_supported; }
    install_mac()    { not_supported; }
    install_ubuntu() { not_supported; }
    install_redhat() { not_supported; }
    setting_common() { not_supported; }
    setting_arch()   { not_supported; }
    setting_msys()   { not_supported; }
    setting_cygwin() { not_supported; }
    setting_mac()    { not_supported; }
    setting_ubuntu() { not_supported; }
    setting_redhat() { not_supported; }
    #is_installed
    #install_via_os_default
    #def_install
    #is_debug
    #is_dry
    #log
    #dlog
    #not_supported
    #make_link_dot2home
    #make_lnk_with_bkup
    #cd_work
    #make_work_if_needed
    #dl
    #dl_unzip
    #dl_untar
    #gh
    #gh_user_local

