#!/usr/bin/env bash

# settings_d_msys="${WINHOME}/AppData/Roaming/Code/User"
# settings_d_msys="${WINHOME}/scoop/persist/vscode/data/user-data/User"
settings_d_mac="${HOME}/Library/Application Support/Cursor/User"
settings_d_linux="$HOME/.config/Cursor/User"

_fnm=
install_common() {
  log "==> Install from https://cursor.sh/"
  exe open https://cursor.sh/
  exe read -p "Press Enter after download"
  local _bin
  _bin=$(_find_binary)
  if [[ -z $_bin ]]; then
    log "==> No binary found"
    return
  fi
  exe chmod +x "$_bin"
  _fnm=$(basename "$_bin")
  exe mv -v "$_bin" ~/tools/
  local target=~/bin/cursor
  if [[ -e $target ]]; then
    log "==> $target already exists"
    return
  fi
  cat_cursor |
    cat_tee $target
  exe chmod +x "$target"
}

_find_binary() {
  find ~/Downloads/ -maxdepth 1 -mindepth 1 -name 'cursor-*.AppImage' -type f |
    fzf -1 -0 || :
}

cat_cursor() {
  cat <<'EOF'
#!/usr/bin/env -S bash -e

main() {
  local cursor_bin
  cursor_bin=$(find ~/tools -name "cursor-*.AppImage" | sort -r | head -1)
  local args=("$@")
  if [[ $# -eq 0 ]]; then
    root_path=$(get_git_root || echo ".")
    args=("$root_path")
  fi
  "$cursor_bin" "${args[@]}" >&"$0".log &
}
main "$@"
EOF
}

setting_common() {
  _ln_jsons "$settings_d_linux"
}
setting_mac() {
  _ln_jsons "$settings_d_mac"
}
_ln_jsons() {
  # shellcheck disable=SC2154
  make_lnk_with_bkup "$app_dir/settings.json" "$1/settings.json"
  make_lnk_with_bkup "$app_dir/keybindings.json" "$1/keybindings.json"
}
