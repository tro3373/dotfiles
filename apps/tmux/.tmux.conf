#
# tmux.conf : tmuxの設定ファイル
#
# Tips:
# bind: alias of bind-key
# -r: repeatable key


#################################################
# 一般的な設定
#################################################
# prefixのキーバインドを変更
unbind C-b
set-option -g prefix C-a
bind C-a send-prefix

# tmux 起動時のデフォルトシェルの設定を変更
set-option -g default-shell /bin/zsh

# ペーストバッファ、バックログを拡張
set-option -g buffer-limit 20
set-option -g history-limit 5000

# ESCキーの遅延を無くす
set-option -s escape-time 0

# xtermスタイルのファンクションキーシーケンスを生成する
set-option -g xterm-keys on

# Tmux フォーカスイベントを有効にする
set-option -g focus-events on

#################################################
# ウィンドウオプション
#################################################
set -g set-titles on
set -g set-titles-string '#S:#I.#P #W'
# ウィンドウを閉じた時にウィンドウ番号を付番しなおす
set-option -g renumber-windows on

# Keep the window's name fixed
# cf. http://blog.yagni.jp/archives/498 (in japanese)
# cf. http://stackoverflow.com/questions/6041178/keep-the-windows-name-fixed-in-tmux
set-option -g allow-rename off

# ウィンドウ・ペインの番号を１始まりにする
set -g base-index 1
set -g pane-base-index 1

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# マウスを使えるようにする(1.8,1.9a)
# 以下 TMUX 2.0系マウス設定
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -ag terminal-overrides ',*:U8=0'

#################################################
# キーバインドの定義
#################################################
# Ctrl+r : 設定ファイルの再読み込み
bind C-r source-file ~/.tmux.conf \; display-message "Reload Config!!"

# viライクなキーバインドにする
set-window-option -g mode-keys vi
# ペインの移動をviっぽくする
unbind l
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R
# ペインサイズを上下左右（Prefix+JKHL）に変更
# Prefix+J,J,J,J,...と連打してリサイズ可能
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# 新しいwindow/paneを作った時は，現在開いているセッションのパスを引き継ぐ
# 効かない
bind-key c new-window -c "#{pane_current_path}"
bind | split-window -c "#{pane_current_path}" -h
bind - split-window -c "#{pane_current_path}" -v
bind '\' split-window -c "#{pane_current_path}" -hb
bind _ split-window -c "#{pane_current_path}" -vb

# tmuxs 発行して、セッション選択
unbind-key s
# bind-key s split-window -c "#{pane_current_path}" -v \; select-pane -t :+ \; send-keys "tmuxs" C-m
bind-key C-s split-window -v \; select-pane -t :+ \; send-keys "tmuxs" C-m
# bind-key s run -b "tmuxs"

unbind-key N
bind-key N new-session

# bind k run -b tmuxk
bind-key C-k split-window -v \; select-pane -t :+ \; send-keys "tmuxk" C-m

# Window検索設定
unbind-key f
#bind-key f command-prompt -p "find-window:" "find-window '%%'"
# version 1.8 option -N is allow window name search
bind-key f command-prompt -p "find-window:" "find-window -N '%%'"

# Copy Mode
#bind -r C-a copy-mode \; display "Copy mode"
#bind -r [ copy-mode \; display "Copy mode"
bind -r Space copy-mode \; display "Copy mode"

#################################################
# copy-pipeの設定
#################################################
# vimのように 'v' キーでコピーモードを開始/終了
bind-key -T copy-mode-vi v      send -X begin-selection

# Esc キーでコピーの反転を解除（コピーモードは抜けない）
# bind-key -T copy-mode-vi Escape send -X clear-selection
# # Ctrl-c キーでコピーの反転を解除し、コピーモードから抜ける
# bind-key -T copy-mode-vi C-c    send -X  cancel
#
# # コピーモード中（Prefix+v 後）C-v で矩形選択開始
# bind-key -T copy-mode-vi C-v    send -X  rectangle-toggle
# # 1行選択
# bind-key -T copy-mode-vi V      send -X  select-line
#
# # 単語の最初の1文字に移動
# bind-key -T copy-mode-vi w      send -X  next-word
# # 単語の最後の1文字に移動
# bind-key -T copy-mode-vi e      send -X  next-word-end
# # w の逆の動き back
# bind-key -T copy-mode-vi b      send -X  previous-word
#
# # 画面上に映る最上行に移動
# bind-key -T copy-mode-vi g      send -X  top-line
# # 画面上に映る最下行に移動
# bind-key -T copy-mode-vi G      send -X  bottom-line

# 前方検索
# bind-key -T copy-mode-vi /      send -X  search-forward
# 後方検索
# bind-key -T copy-mode-vi ?      send -X  search-backward

# ページスクロール
bind-key -T copy-mode-vi C-n    send -X  page-up
bind-key -T copy-mode-vi C-f    send -X  page-down
# ページ送り
bind-key -T copy-mode-vi C-u    send -X  -N 20 cursor-up
bind-key -T copy-mode-vi C-d    send -X  -N 20 cursor-down
unbind -T copy-mode-vi J
unbind -T copy-mode-vi K
bind-key -T copy-mode-vi K    send -X -N 10 cursor-up
bind-key -T copy-mode-vi J    send -X -N 10 cursor-down

#################################################
# カラー設定
#################################################
# ステータスラインを上に表示する
set-option -g status-position top

# 256色ターミナルを有効化する
# [vimの256色対応させるのにset t_Co=256は必要ない | ysk24ok.github.io](https://ysk24ok.github.io/2017/02/05/vim_256color.html)
set-option -g default-terminal "screen-256color"
# [tmux 上で Vim を True Color (24 bit color) で使う #Vim - Qiita](https://qiita.com/yami_beta/items/ef535d3458addd2e8fbb)
set-option -ga terminal-overrides ",xterm-256color:Tc"

##### colour view in bash command is below...
#####
##### for i in {0..255} ; do
#####     printf "\x1b[38;5;${i}mcolour${i}  "
##### done


##### COLOUR (Solarized 256) #{{{
#    ##### https://github.com/altercation/solarized/blob/master/tmux/tmuxcolors-256.conf
#    ## ステータスバーの色
#    set-option -g status-bg colour235 #base02
#    #set-option -g status-fg colour136 #yellow
#    set-option -g status-fg colour33 #light blue
#    set-option -g status-attr default
#
#    ## 非アクティブなウィンドウの色
#    set-window-option -g window-status-fg colour244 #base0
#    set-window-option -g window-status-bg default
#    #set-window-option -g window-status-attr dim
#
#    ## アクティブなウィンドウの色
#    set-window-option -g window-status-current-fg colour166 #orange
#    set-window-option -g window-status-current-bg default
#    #set-window-option -g window-status-current-attr bright
#
#    # pane border
#    set-option -g pane-border-fg colour235 #base02
#    set-option -g pane-active-border-fg colour240 #base01
#    set-option -g pane-active-border-bg colour240
#
#    # message text
#    set-option -g message-bg colour235 #base02
#    set-option -g message-fg colour166 #orange
#
#    ## ペイン番号の表示色を変更
#    set-option -g display-panes-active-colour colour33 #light blue
#    #set-option -g display-panes-colour colour166 #orange
#    set-option -g display-panes-colour colour33 #light blue
#
#    # clock
#    set-window-option -g clock-mode-colour colour64 #green
#}}}

#### COLOUR (Solarized dark) #{{{

    # default statusbar colors
    set-option -g status-style bg=colour234,fg=blue,default

    # default window title colors
    set-window-option -g window-status-style fg=brightblue,bg=default
    #set-window-option -g window-status-attr dim

    # active window title colors
    set-window-option -g window-status-current-style fg=colour248,bg=default
    #set-window-option -g window-status-current-attr bright

    # pane border
    set-option -g pane-border-style fg=black
    set-option -g pane-active-border-style fg=brightgreen

    # message text
    set-option -g message-style bg=black,fg=red

    # pane number display
    set-option -g display-panes-active-colour blue
    set-option -g display-panes-colour brightred

    # clock
    set-window-option -g clock-mode-colour green

    # bell
    set-window-option -g window-status-bell-style fg=black,bg=red #base02, red
#}}}


## ステータスラインの設定 {{{
# Status line で使用できる特殊文字
#       #(shell command) コマンドの出力の最初の行
#       #[attributes]    色や属性の変更
#       #H               ローカルホストのホスト名
#       #h               ローカルホストのドメイン名を除いたホスト名
#       #F               カレントウィンドウのフラグ
#       #I               カレントウィンドウのインデクス
#       #D               カレントペインの識別子
#       #P               カレントペインのインデクス
#       #S               セッション名
#       #T               カレントペインのタイトル
#       #W               カレントウィンドウの名前
#       ##               #
#   set-option -g status on                 # ステータスライン有効
    set-option -g status-interval 2         # 更新間隔
    set-option -g status-justify "centre"   # ウィンドウリスト配置位置
    set-option -g status-left-length  200   # ステータスラインの長さ
    set-option -g status-right-length 220   # ステータスラインの長さ
    set-option -g status-left  "#[fg=brightgreen]#{?client_prefix,#[reverse],}[#S] #[default]"
    set-option -g status-right "#[fg=brightgreen]#{?client_prefix,#[reverse],}#(whoami)@#H[%Y-%m-%d(%a) %H:%M:%S]"
#}}}


# クリップボード連携はＯＳ毎に別定義
#
# Mac OS-X用
if-shell "uname | grep Darwin" \
         "source-file ~/.tmux/tmux.conf.macosx"

# Linux用
if-shell "uname | grep Linux" \
         "source-file ~/.tmux/tmux.conf.linux"

## Cygwin用
#if-shell "uname | grep -q CYGWIN" \
#         "source-file ~/.tmux/tmux.conf.cygwin"

# Msys2用
if-shell "uname | grep -E -q '(MSYS|MINGW)'" \
         "source-file ~/.tmux/tmux.conf.msys"
