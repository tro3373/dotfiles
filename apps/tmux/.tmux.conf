#
# tmux.conf : tmuxの設定ファイル
#


#################################################
# 一般的な設定
#################################################
# prefixのキーバインドを変更
unbind C-b
set-option -g prefix C-a
bind C-a send-prefix

# ペーストバッファ、バックログを拡張
set-option -g buffer-limit 20
set-option -g history-limit 5000

# 日本語環境で UTF-8 を使用する
# 2.2以上でutf8設定は不要？
# https://github.com/tmux/tmux/issues/230
if-shell "[[ `tmux -V` == *1.* ]]" \
    'setw -g utf8 on; set-option -g status-utf8 on'

# ESCキーの遅延を無くす
set-option -s escape-time 0

# xtermスタイルのファンクションキーシーケンスを生成する
set-option -g xterm-keys on

#################################################
# ウィンドウオプション
#################################################
set -g set-titles on
set -g set-titles-string '#S:#I.#P #W'
# ウィンドウを閉じた時にウィンドウ番号を付番しなおす
set-option -g renumber-windows on

# Keep the window's name fixed
# cf. http://blog.yagni.jp/archives/498 (in japanese)
# cf. http://stackoverflow.com/questions/6041178/keep-the-windows-name-fixed-in-tmux
set-option -g allow-rename off

# ウィンドウ・ペインの番号を１始まりにする
set -g base-index 1
set -g pane-base-index 1

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# マウスを使えるようにする(1.8,1.9a)
# set-window-option -g mode-mouse on
# set-option -g mouse-select-window on
# set-option -g mouse-select-pane on
# set-option -g mouse-resize-pane on
# 以下 TMUX 2.0系マウス設定
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

set -g terminal-overrides 'xterm*:smcup@:rmcup@'

#################################################
# キーバインドの定義
#################################################
# Ctrl+r : 設定ファイルの再読み込み
bind C-r source-file ~/.tmux.conf \; display-message "Reload Config!!"

# viライクなキーバインドにする
set-window-option -g mode-keys vi
# ペインの移動をviっぽくする
unbind l
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R
# ペインサイズを上下左右（Prefix+JKHL）に変更
# Prefix+J,J,J,J,...と連打してリサイズ可能
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# 新しいwindow/paneを作った時は，現在開いているセッションのパスを引き継ぐ
# 効かない
bind-key c new-window -c "#{pane_current_path}"
bind | split-window -c "#{pane_current_path}" -h
bind - split-window -c "#{pane_current_path}" -v

#bind-key c new-window
#bind | split-window -h
#bind - split-window -v

# Window選択設定
unbind-key s
bind-key s command-prompt "select-window -t '%%'"
# Window検索設定
unbind-key f
#bind-key f command-prompt -p "find-window:" "find-window '%%'"
# version 1.8 option -N is allow window name search
bind-key f command-prompt -p "find-window:" "find-window -N '%%'"
# Copy Mode
bind -r C-a copy-mode \; display "Copy mode"
bind -r [ copy-mode \; display "Copy mode"
bind -r Space copy-mode \; display "Copy mode"

#################################################
# copy-pipeの設定 (at least v1.8)
#################################################
# vimのように 'v' キーでコピーモードを開始/終了
bind-key -t vi-copy v begin-selection

# Esc キーでコピーの反転を解除（コピーモードは抜けない）
bind-key -t vi-copy Escape clear-selection
# Ctrl-c キーでコピーの反転を解除し、コピーモードから抜ける
bind-key -t vi-copy C-c     cancel

# コピーモード中（Prefix+v 後）C-v で矩形選択開始
bind-key -t vi-copy C-v     rectangle-toggle
# 1行選択
bind-key -t vi-copy V       select-line

# 単語の最初の1文字に移動
bind-key -t vi-copy w       next-word
# 単語の最後の1文字に移動
bind-key -t vi-copy e       next-word-end
# w の逆の動き back
bind-key -t vi-copy b       previous-word

# 画面上に映る最上行に移動
bind-key -t vi-copy g       top-line
# 画面上に映る最下行に移動
bind-key -t vi-copy G       bottom-line

# 前方検索
bind-key -t vi-copy /       search-forward
# 後方検索
bind-key -t vi-copy ?       search-backward

# ページスクロール
bind-key -t vi-copy C-n     page-up
bind-key -t vi-copy C-f     page-down
# ページ送り
bind-key -t vi-copy C-u     scroll-up
bind-key -t vi-copy C-d     scroll-down

# クリップボード連携はＯＳ毎に別定義
#
# Mac OS-X用
if-shell "uname | grep Darwin" \
         "source-file ~/.tmux/tmux.conf.macosx"

# Linux用
if-shell "uname | grep Linux" \
         "source-file ~/.tmux/tmux.conf.linux"

# Cygwin用
if-shell "uname | grep -q CYGWIN" \
         "source-file ~/.tmux/tmux.conf.cygwin"

#################################################
# カラー設定
#################################################
# ステータスラインを上に表示する
set-option -g status-position top

# 256色ターミナルを有効化する
set-option -g default-terminal "screen-256color"

##### colour view in bash command is below...
#####
##### for i in {0..255} ; do
#####     printf "\x1b[38;5;${i}mcolour${i}  "
##### done


##### COLOUR (Solarized 256) #{{{
    ##### https://github.com/altercation/solarized/blob/master/tmux/tmuxcolors-256.conf
    ## ステータスバーの色
    set-option -g status-bg colour235 #base02
    #set-option -g status-fg colour136 #yellow
    set-option -g status-fg colour33 #light blue
    set-option -g status-attr default

    ## 非アクティブなウィンドウの色
    set-window-option -g window-status-fg colour244 #base0
    set-window-option -g window-status-bg default
    #set-window-option -g window-status-attr dim

    ## アクティブなウィンドウの色
    set-window-option -g window-status-current-fg colour166 #orange
    set-window-option -g window-status-current-bg default
    #set-window-option -g window-status-current-attr bright

    # pane border
    set-option -g pane-border-fg colour235 #base02
    set-option -g pane-active-border-fg colour240 #base01
    set-option -g pane-active-border-bg colour240

    # message text
    set-option -g message-bg colour235 #base02
    set-option -g message-fg colour166 #orange

    ## ペイン番号の表示色を変更
    set-option -g display-panes-active-colour colour33 #light blue
    #set-option -g display-panes-colour colour166 #orange
    set-option -g display-panes-colour colour33 #light blue

    # clock
    set-window-option -g clock-mode-colour colour64 #green
#}}}

#### COLOUR (Solarized dark) #{{{
#    # default statusbar colors
#    set-option -g status-bg black #base02
#    set-option -g status-fg yellow #yellow
#    set-option -g status-attr default
#
#    # default window title colors
#    set-window-option -g window-status-fg brightblue #base0
#    set-window-option -g window-status-bg default
#    #set-window-option -g window-status-attr dim
#
#    # active window title colors
##    set-window-option -g window-status-current-fg brightred #orange
#    set-window-option -g window-status-current-fg colour166 #orange
#    set-window-option -g window-status-current-bg default
#    #set-window-option -g window-status-current-attr bright
#
#    # pane border
#    set-option -g pane-border-fg black #base02
#    set-option -g pane-active-border-fg brightgreen #base01
#
#    # message text
#    set-option -g message-bg black #base02
#    set-option -g message-fg brightred #orange
#
#    # pane number display
#    set-option -g display-panes-active-colour blue #blue
#    set-option -g display-panes-colour brightred #orange
#
#    # clock
#    set-window-option -g clock-mode-colour green #green
#
#    # bell
#    set-window-option -g window-status-bell-style fg=black,bg=red #base02, red
#}}}


#################################################
# PowerLineを使用する
#################################################
#run-shell "powerline-daemon -q"
#if "test -d ~/.local/lib/python2.7" \
#        "source ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"

## ステータスラインの設定 {{{
# set-option -g status on                 # ステータスライン有効
set-option -g status-interval 2         # 更新間隔
set-option -g status-justify "centre"   # ウィンドウリスト配置位置
set-option -g status-left-length  200   # ステータスラインの長さ
set-option -g status-right-length 220   # ステータスラインの長さ
# set-option -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)"
# set-option -g status-right "#(~/.tmux/tmux-powerline/powerline.sh right)"
#set -g status-right '#[fg=cyan]#(/usr/bin/gcalcli --nc --ignore-started agenda "$(date\)"| head -2 | tail -1) #[fg=green]#(/usr/bin/dstat --battery-remain --nocolor 1 0 | tail -1) #[fg=green]#(whoami)@#H #[fg=yellow]#(cut -d " " -f 1 /proc/loadavg) #[default]%a %d %b %R'
## }}}


