#!/usr/bin/env bash

# see [[Terraform CLI]MFA認証を使ったAssumeRole。AWSVaultで解決 | DevelopersIO](https://dev.classmethod.jp/articles/terraform-assumerole/)
# see [aws-vaultをLinux環境でも使う方法【セキュリティ向上】 – Hacker's High](https://hackers-high.com/aws/aws-vault-on-linux/#pass_GnuPG)
# see [99designs/aws-vault: A vault for securely storing and accessing AWS credentials in development environments](https://github.com/99designs/aws-vault)
# see [aws-vault についてのあれこれ - Qiita](https://qiita.com/kangaechu/items/cb8f68e3866ee5af71c8)

install_common() {
  if ! has gpg; then
    log "==> Installing gpg"
    def_install gpg
    return
  fi
  if ! has pass; then
    add_dependency_args pass
    return
  fi
  exe gen_gpg_keys
  install_via_os_default
}

setting_common() {
  setup_work_env
  setup_gpg_agent
  cheat_aws_vault
}

setup_work_env() {
  local target=~/.works.zsh
  if grep AWS_VAULT_PASS_PREFIX $target >&/dev/null; then
    return
  fi
  cat_add_vault_export_env |
    cat_tee -a $target
}

cat_add_vault_export_env() {
  cat <<'EOF'
export GPG_TTY=$(tty)
export AWS_VAULT_BACKEND=pass
export AWS_VAULT_PASS_PREFIX=aws-vault
export AWS_SESSION_TOKEN_TTL=3h
EOF
}

setup_gpg_agent() {
  local target=~/.gnupg/gpg-agent.conf
  if [[ -e $target ]]; then
    grep default-cache-ttl $target >&/dev/null && return
  fi
  echo "default-cache-ttl 10800" |
    cat_tee -a $target
  exe chmod 600 $target
  exe gpg-connect-agent reloadagent /bye
}

cheat_aws_vault() {
  cat <<'EOF'
------------------------------------------------------------------
==> No need aws credentials. (~/.aws/credentials)
==> Only config settings is needed. (~/.aws/config)
==> Sample mfa settings is bellow
  [profile profile_switch_from]
  # Save access key and secret key to aws-vault with
  # profile name `profile_switch_from`

  [profile common]
  source_profile = profile_switch_from
  region = ap-northeast-1
  output = json
  mfa_serial = arn:aws:iam::xxxxx:mfa/xxxxx-iam-user-name
  role_session_name = xxxxx-iam-user-name

  [profile profile_switch_to]
  include_profile = common
  role_arn = arn:aws:iam::xxxxx:role/xxxxx-role-name

==> Or Use credential_process ver(Use aws command with no aws-vault exec)
==> see aws-vaultでcliとterraformをいい感じにしてみる | DevelopersIO
==>   https://dev.classmethod.jp/articles/awsvault_config/
  [profile profile_switch_from]
  mfa_serial = arn:aws:iam::xxxxx:mfa/xxxxx-iam-user-name
  region = ap-northeast-1
  output = json

  [profile common]
  credential_process = aws-vault --prompt terminal export profile_switch_from --duration 12h --format=json

  [profile profile_switch_to]
  source_profile = common
  region = ap-northeast-1
  output = json
  role_session_name = xxxxx-iam-user-name
  role_arn = arn:aws:iam::xxxxx:role/xxxxx-role-name

==> If you have no mfa device, `--no-session` option can be used.
==> You need this first. `export GPG_TTY=$(tty)`
------------------------------------------------------------------
EOF
}
