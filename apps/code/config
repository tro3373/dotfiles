#!/usr/bin/env bash

install_common() { not_supported; }
install_arch() {
  def_install visual-studio-code-bin
}
install_msys() {
  exe scoop install vscode
}
install_cygwin() { not_supported; }
install_mac() {
  def_install --cask visual-studio-code
}
install_ubuntu() { not_supported; }
install_redhat() { not_supported; }

_link_bin_code_if_needed() {
  local target=~/bin/code
  if [[ -e $target ]]; then
    log "==> $target already exists"
    return
  fi
  # shellcheck disable=SC2154
  make_lnk_with_bkup "$app_dir/code" "$target"
}

setting_common() {
  _link_bin_code_if_needed
}
# setting_arch() { no_settings; }
setting_msys() {
  # _ln_jsons "$settings_d_msys"
  # _add_packages
  exe winln -q "$WINHOME/scoop/apps/vscode/current/Code.exe"
}
# setting_cygwin() { no_settings; }
# setting_mac() {
#   # _ln_jsons "$settings_d_mac"
#   # _add_code_path "/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
#   :
# }
# setting_ubuntu() {
#   # _ln_jsons "$settings_d_ubuntu"
#   :
# }
# setting_redhat() { no_settings; }
# _add_code_path() {
#   local _code_bin="$*"
#   local _target=$HOME/.works.zsh
#   if grep "$_code_bin" "$_target" >&/dev/null; then
#     return
#   fi
#   log "==> Adding to $_target.."
#   echo "add_path '$_code_bin'" |
#     if is_dry; then
#       cat -
#     else
#       cat - | tee -a "$_target"
#     fi
#   del_if_exist "$HOME/.path"
#   # Use setting sync
#   # _add_packages
# }
# _add_packages() {
#   if is_dry; then
#     log "==> vscode packages is.."
#     # shellcheck disable=SC2154
#     while read -r p; do
#       [[ -z $p ]] && continue
#       [[ $p =~ ^#.* ]] && continue
#       echo "  - $p"
#     done <"$app_dir/extensions"
#   fi
#   log "==> vscode installing packages.."
#   export PATH="$_code_bin:$PATH"
#   exe "$app_dir/gen_extensions" 1
# }
# _ln_jsons() {
#   # shellcheck disable=SC2154
#   make_lnk_with_bkup "$app_dir/settings.json" "$1/settings.json"
#   make_lnk_with_bkup "$app_dir/keybindings.json" "$1/keybindings.json"
# }
