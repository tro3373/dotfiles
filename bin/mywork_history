#!/usr/bin/env bash

readonly command_name=$(basename $0)
vtype=${1}

pre_ymd=
pre_hms=
pre_unixt=
pre_group=
pre_task=

usage() {
  cat <<EOF

  Show my work history

    Usage:
        $command_name [option]
      Options
        -h|--help : Show this usage
        vtype: last

EOF
}

pass_time() {
  local from=$1
  local to=$2
  local all_second=$(echo "scale=0; ($to-$from)" | bc)
  echo $all_second
}
human_pass_time() {
  local all_second=$1
  local h=$(echo "scale=0; $all_second/60/60" | bc)
  local m=$(echo "scale=0; ($all_second/60)%60" | bc)
  local s=$(echo "scale=0; $all_second%60" | bc)
  # echo "$h $m" 1>&2
  printf "%02dh%02dm%02ds" $h $m $s
}
sub() {
  if [[ -n $pre_unixt ]]; then
    if [[ -n $pre_group ]]; then
      local pass_time_s=$(pass_time $pre_unixt $unixt)
      local human_pass_time=$(human_pass_time $pass_time_s)
      # echo "$pre_unixt $unixt $pass_time_s $human_pass_time" 1>&2
      printf "%s\t%s\t%s\t%s\t%s\t%s\\n" "$pre_ymd" "$pre_hms" "$pass_time_s" "$human_pass_time" "$pre_group" "$pre_task"
    fi
  fi
  pre_ymd=$ymd
  pre_hms=$hms
  pre_unixt=$unixt
  pre_group=$group
  pre_task=$task
  # pre_args="$(printf "%s\t%s\t%s\t%s\t%s\\n" "$ymd" "$hms" "$unixt" "$group" "$task")"
  # pre_group=$group
}

summary() {
  [[ -z $lines ]] && return
  local pre_group=
  local sum_val=0
  # shellcheck disable=SC2034
  (echo -e "$lines" && echo -e "DUMMY\tDUMMY\tDUMMY\tDUMMY\tDUMMY\tDUMMY") |
    while read -r ymd hms time htime group task; do
      if [[ $pre_group != "$group" ]]; then
        if [[ -n $pre_group ]]; then
          echo -e "$pre_group\t$sum_val\t$(human_pass_time $sum_val)"
        fi
        sum_val=0
      fi
      sum_val=$((sum_val + time))
      pre_group=$group
    done
}

show() {
  if [[ $vtype =~ ^last.* ]]; then
    local list=$(cat -)
    local last_date=$(echo -e "$list" | tail -1 | awk '{print $1}')
    echo ">> $last_date" 1>&2
    echo -e "$list" |
      grep -E "^$last_date" |
      if [[ $vtype == "last" ]]; then
        cat -
      else
        local lines=$(cat - | sort -k5)
        summary
      fi
  else
    cat -
  fi
}

main() {
  [[ $vtype =~ ^(-h|--help)$ ]] && usage && return
  local f=$(
    find $HOME/works/00_memos/ -name "*æœˆ.md" |
      sort -r |
      if [[ $vtype =~ ^last.* ]]; then
        cat - | head -1
      else
        cat - | fzf
      fi
  )
  [[ -z $f ]] && return
  if [[ $vtype =~ ^last.* && -e $f ]]; then
    echo "> $f" 1>&2
  fi
  (grep -E "^- 20" $f && date "+%Y%m%d_%H%M%S dummy") |
    sed -e 's/^- //g' |
    while read -r ymdhms group task; do
      # echo "$ymdhms" "$group" "$task"
      local ymd=${ymdhms%%_*}
      local hms=${ymdhms##*_}
      printf "%s\t%s\t%s\t%s\\n" "$ymd" "$hms" "$group" "$task"
    done |
    sort |
    while read -r ymd hms group task; do
      local strd=$(echo "${ymd}_${hms}" | sed -e "s/^\([0-9]\{4\}\)\([0-9]\{2\}\)\([0-9]\{2\}\)_\([0-9]\{2\}\)\([0-9]\{2\}\)\([0-9]\{2\}\)/\1\/\2\/\3 \4:\5:\6/g")
      local unixt=$(date -d "$strd" "+%s")
      # echo "$strd $unixt"
      printf "%s\t%s\t%s\t%s\t%s\\n" "$ymd" "$hms" "$unixt" "$group" "$task"
    done |
    while read -r ymd hms unixt group task; do
      sub "$@"
    done | show
}
main "$@"
