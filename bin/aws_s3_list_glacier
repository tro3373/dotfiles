#!/usr/bin/env -S bash -e

command_name=$(basename "$0") && readonly command_name
readonly depends=(aws)

purge=0
args=()

usage() {
  cat <<EOF

List objects in S3 bucket with Glacier storage class.

  Usage:
      $command_name [option] <bucket>
    Options
      -h|--help : Show this usage
      -p|--purge : Delete objects in Glacier storage class

EOF
}
has() { command -v "${1}" >&/dev/null; }
hass() { for arg in "$@"; do has "$arg" || error "==> No $arg command exist."; done; }
_ink() { cat - | if has ink; then ink "$@"; else cat -; fi; }
# shellcheck disable=SC2145
_log() { echo "$(date +"%Y-%m-%d %H:%M:%S") ${@:2}" | _ink "$1"; }
log() { _log white "$*"; }
info() { _log cyan "$*"; }
warn() { _log yellow "$*"; }
error() { _log red "$*" && exit 1; }
initialize() {
  while true; do
    [[ -z $1 ]] && break
    case "$1" in
      -h | --help) usage && exit 0 ;;
      -p | --purge) purge=1 ;;
      *) add_args "$1" ;;
    esac
    shift
  done
  check
}
add_args() { args+=("$@"); }
check() {
  hass "${depends[@]}"
  if [[ ${#args[@]} -ne 1 ]]; then
    error "==> Specify bucket."
  fi
}

list() {
  aws s3api list-objects-v2 \
    --bucket "$bucket" \
    --query "Contents[?StorageClass=='GLACIER'].{Key: Key}" \
    --no-paginate \
    --output text
}

delete() {
  cat - | xargs -I {} aws s3api delete-object --bucket "$bucket" --key {}
}

main() {
  initialize "$@"
  bucket="${args[0]}"
  list |
    if [[ $purge -eq 1 ]]; then
      delete
    else
      cat -
    fi
}
main "$@"
