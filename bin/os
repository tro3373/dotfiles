#!/bin/bash

# is_wsl() { [[ -f /proc/sys/fs/binfmt_misc/WSLInterop ]]; }
# is_wsl() { [[ -n $WSL_DISTRO_NAME ]]; }
is_wsl() { [[ -e /proc/version ]] && grep -qi microsoft /proc/version; }
is_orb() { uname -r | grep -qi orbstack; }

# TODO indent
detect_os() {
  local result=
  if [[ -e /etc/debian_version ]] ||
    [[ -e /etc/debian_release ]]; then
    # Check Ubuntu or Debian
    if [[ -e /etc/lsb-release ]]; then
      # Ubuntu
      result="ubuntu"
    else
      # Debian
      result="debian"
    fi
  elif [[ -e /etc/fedora-release ]]; then
    # Fedra
    result="fedora"
  elif [[ -e /etc/redhat-release ]]; then
    if [ -e /etc/oracle-release ]; then
      # Oracle Linux
      result="oracle"
    else
      # Red Hat Enterprise Linux
      result="redhat"
    fi
  elif [ -e /etc/arch-release ]; then
    # Arch Linux
    result="arch"
  elif [[ -e /etc/turbolinux-release ]]; then
    # Turbolinux
    result="turbol"
  elif [[ -e /etc/SuSE-release ]]; then
    # SuSE Linux
    result="suse"
  elif [[ -e /etc/mandriva-release ]]; then
    # Mandriva Linux
    result="mandriva"
  elif [[ -e /etc/vine-release ]]; then
    # Vine Linux
    result="vine"
  elif [[ -e /etc/gentoo-release ]]; then
    # Gentoo Linux
    result="gentoo"
  elif [[ $(uname) == "Darwin" ]]; then
    # mac
    result="mac"
  elif [[ $OSTYPE == "cygwin" ]]; then
    # mac
    result="cygwin"
  elif [[ $OSTYPE == "msys" ]]; then
    # mac
    result="msys"
  else
    # Other
    result="Unkown distribution"
  fi
  echo "$result"
}

handle_args() {
  local arg=$1
  local result=false
  if [[ $arg == "win" ]]; then
    case "$os" in
      cygwin | msys) result=true ;;
    esac
    is_wsl && result=true
  elif [[ $arg == "linux" ]]; then
    case "$os" in
      cygwin | msys | mac) ;;
      *) result=true ;;
    esac
  elif [[ $arg == "unix" ]]; then
    case "$os" in
      cygwin | msys) ;;
      *) result=true ;;
    esac
  elif [[ $arg == "wsl" ]]; then
    is_wsl && result=true
  elif [[ $arg == "orb" ]]; then
    is_orb && result=true
  elif [[ $os == "$arg" ]]; then
    result=true
  fi
  [[ $result == true ]] && exit 0
  exit 1
}

# Get Linux distribution name
main() {
  if [[ $# -eq 1 ]] && [[ $1 == "-v" ]]; then
    cat /etc/issue
    return
  fi
  local os
  os="$(detect_os)"
  if [[ $# -eq 0 ]]; then
    echo "$os"
    return
  fi
  handle_args "$@"
}
main "$@"
