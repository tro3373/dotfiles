#!/usr/bin/env bash

command_name=$(basename "$0")
dummy="echo"
system_prune=0
is_dummy() { [[ -n $dummy ]]; }
args=()

usage() {
  cat <<EOF

Clean docker images

Usage:
  $command_name [option]

Options
  -h|--help : Show this usage
         -e : Excute command. default is dry run mode.
         -s : with system prune

EOF
}

initialize() {
  while true; do
    [[ -z $1 ]] && break
    case "$1" in
      -h | --help) usage && exit 0 ;;
      -e) dummy= ;;
      -s) system_prune=1 ;;
      #-f*|--file*) file=${1#*=} ;;
      #-f|--file) shift && file=$1 ;;
      *) add_args "$1" ;;
    esac
    shift
  done
}
add_args() { args+=("$@"); }
has() { command -v "${1}" >&/dev/null; }
_ink() { cat - | if has ink; then ink "$@"; else cat -; fi; }
# shellcheck disable=SC2145
_log() { echo "$(date +"%Y-%m-%d %H:%M:%S") ${@:2}" | _ink "$1"; }
log() { _log white "$*"; }
info() { _log cyan "$*"; }
warn() { _log yellow "$*"; }
error() { _log red "$*" && exit 1; }

clean_not_active_containers() {
  info "=> Cleaning not active containers.."
  find_not_active_containers |
    while read -r id; do
      [[ -z $id ]] && continue
      [[ $id =~ ^#.* ]] && continue
      echo "==> Cleaning $(docker ps -a | grep "$id") .."
      $dummy docker rm "$id"
      docker ps -a | grep "$id" >&/dev/null || echo "==> Cleaned $id."
    done
}

find_not_active_containers() {
  docker ps -a -q |
    while read -r id; do
      [[ -z $id ]] && continue
      [[ $id =~ ^#.* ]] && continue
      docker ps -q | grep "$id" >&/dev/null && continue
      echo "$id"
    done
}

clean_none_images() {
  info "=> Cleaning <none> images.."
  find_none_images |
    while read -r repo tag id created size; do
      [[ -z $repo ]] && continue
      [[ $repo =~ ^#.* ]] && continue
      echo "==> Cleaning $repo $tag $id $created $size .."
      $dummy docker rmi "$id"
    done
}

find_none_images() {
  docker images |
    grep -E '<none>'
}

clean_system_images() {
  [[ $system_prune -eq 0 ]] && return
  info "=> Cleaning via system prune -a.."
  $dummy docker system prune -a
}

main() {
  initialize "$@"
  clean_not_active_containers
  clean_none_images
  if is_dummy; then
    echo -e "\n>>> This is dummy mode. specify -e option." | ink yellow
  fi
}
main "$@"
