#!/usr/bin/env bash

readonly base_url=http://ftp.jaist.ac.jp/pub/Linux/ArchLinux/iso/latest/
readonly dstd=$HOME/win/wsl

latest_url() {
  local fname=$(curl -fSsL $base_url |
    grep href |
    grep --color 'tar.gz"' |
    sed -e 's,^.*href=",,g' -e 's,".*,,g'
  )
  echo "$base_url/$fname"
}

setup_arch() {
  cat <<'EOF' >>/etc/pacmand./mirrorlist
###########################
## Japan
Server = https://ftp.jaist.ac.jp/pub/Linux/ArchLinux/$repo/os/$arch
Server = http://ftp.jaist.ac.jp/pub/Linux/ArchLinux/$repo/os/$arch
Server = http://mirrors.cat.net/archlinux/$repo/os/$arch
Server = http://ftp.tsukuba.wide.ad.jp/Linux/archlinux/$repo/os/$arch
###########################
EOF
  while read -r line; do
    [[ -z $line ]] && continue
    [[ $line =~ ^#.* ]] && continue
  done
  pacman-key --init
  pacman-key --populate archlinux
  pacman -Syuu
  pacman -S vim grep sed which gzip

  # uncomment en_US.UTF8 ja_JP.UTF8
  sed -i -e '/en_US.UTF-8/s/^#en/en/' -e '/ja_JP.UTF-8/s/^#ja/ja/' /etc/locale.gen
  # gen locale
  locale-gen
  echo LANG=en_US.UTF-8 > /etc/locale.conf


}

main() {
  if [[ -e $dstd ]]; then
    echo "Already exist $dstd." 1>&2
    exit 1
  fi
  local tmp=$dstd/tmp
  mkdir -p $tmp
  cd $tmp
  local url=$(latest_url)
  echo "> Downloading to $tmp from $url.." 1>&2
  curl -LO $url
  sudo tar -xzf *.tar.gz
  cd root.x86_64
  sudo tar -czvf ArchLinux.tar.gz .
  # TODO execute in cmd
  # wsl --import ArchLinux %USERPROFILE%\wsl\ArchLinux %USERPROFILE%\wsl\tmp\ArchLinux.tar.gz
  # wsl -d ArchLinux
  # setup_arch
}
main "$@"
