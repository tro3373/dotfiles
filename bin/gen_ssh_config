#!/bin/bash

current_dir=$(pwd)
# script_dir=$(cd $(dirname $0); pwd)
command_name=$(basename "$0") && readonly command_name

usage() {
  cat <<EOF
Generate ssh sample config for ~/.ssh/config.
  Usage:
      $command_name [option]
    Options
            No args : Show config sample.
          -h|--help : Show this usage
      -g|--generate : Generate template config file to ~/.ssh/config or current directory($current_dir) (error if exists.)

EOF
}

set_args() {
  for arg in "$@"; do
    case "$arg" in
      -h | --help)
        usage
        exit 0
        ;;
      -g | --generate)
        gen_file=1
        ;;
      *)
        echo "No option for $arg" 1>&2
        ;;
    esac
  done
}

initialize() {
  set_args "$@"
}

cat_template() {
  cat <<'EOL'
Host *
  IdentityFile /path/to/your/identity/file
  ServerAliveInterval 30
  GSSAPIAuthentication no
  SendEnv LANG LC_*
  ControlMaster auto
  ControlPath ~/.ssh/socks/mux-%r@%n:%p
  ControlPersist 4h
  # ForwardX11 yes
  # ForwardX11Trusted yes
  # disable because tunnel to vag not work
  ## Use master connection(faster)
Host sp* al*
  PermitLocalCommand  yes
  LocalCommand [[ -n $TMUX ]] && tmux rename-window %n
  # '%d' (local user's home directory)
  # '%h' (remote host name)
  # '%l' (local host name)
  # '%n' (host name as provided on the command line)
  # '%p' (remote port)
  # '%r' (remote user name)
  # '%u' (local user name)
Host springboard
  HostName XXX.XXX.XXX.XXX
  Port 22
  User username
  # No check known host
  CheckHostIP no
Host aliasname
  HostName XXX.XXX.XXX.XXX
  Port 22
  User username
  ProxyCommand ssh -W  %h:%p springboard
  # ProxyCommand nohup ssh -t springboard "ssh username@server2"
  # ProxyCommand ssh springboard nc -w 1000 %h %p
Host proxyserver
  HostName XXX.XXX.XXX.XXX
  Port 22
  User username
  # SOCKS PROXY
  #   same with: ssh -D 10080 username@proxyserver
  DynamicForward 10080
Host dbserver
  HostName XXX.XXX.XXX.XXX
  Port 22
  User username
  # Local Forward(same with `ssh -L 15432:rds.postgres.jp:5432 ...`)
  LocalForward 15432 rds.postgres.jp:5432
  # see https://unix.stackexchange.com/questions/424183/what-is-the-ssh-config-corresponding-option-for-ssh-n
  RequestTTY no
  RemoteCommand cat
Host remote_devserver
  HostName XXX.XXX.XXX.XXX
  Port 22
  User username
  # Remote Forward(same with `ssh -R 25900:localhost:5900 ...`)
  RemoteForward 25900 localhost:5900
# http://bit.ly/1MD3d24
Host */*
  ProxyCommand ssh -W "$(basename "%h")":%p "$(dirname "%h")"
Host *+*
  ProxyCommand ssh -W "$(sed -E 's/.*\+//'<<<"%h")":%p "$(sed -E 's/\+[^\+]*//'<<<"%h")"
EOL
}

permission=640
advice() {
  cat <<EOL2

  ==> Finaly...
    Change the config permission to $permission.
        ex) chmod $permission <the target config>
EOL2
}

gen_config() {
  local target="$1"
  if [[ -e $target ]]; then
    echo "===> Already exists config file in $target." 1>&2
    return 1
  fi
  cat_template >"$target" && chmod $permission "$target"
  echo "===> Config file generated in $target."
  return 0
}

main() {
  initialize "$@"
  [[ $gen_file -ne 1 ]] && usage && cat_template && advice && exit 0
  (gen_config ~/.ssh/config || gen_config "$current_dir"/config) || echo "==> No generate space exists!"
}
main "$@"
