#!/usr/bin/env bash

command_name=$(basename "$0") && readonly command_name
tmp_msg=/tmp/"$command_name.txt" && readonly tmp_msg
tmp_msg_json=/tmp/"$command_name.json" && readonly tmp_msg_json
readonly depends=(jq llm)

has() { command -v "${1}" >&/dev/null; }
hass() { for arg in "$@"; do has "$arg" || error "==> No $arg command exist."; done; }
# hass "${depends[@]}"
_ink() { cat - | if has ink; then ink "$@"; else cat -; fi; }
# shellcheck disable=SC2145
_log() { echo "$(date +"%Y-%m-%d %H:%M:%S") ${@:2}" | _ink "$1"; }
log() { _log white "$*"; }
info() { _log cyan "$*"; }
warn() { _log yellow "$*"; }
error() { _log red "$*" && exit 1; }

trap_error() {
  warn "[Error]: $(cat <"$tmp_msg")"
}

trap_exit() {
  rm -f "$tmp_msg" "$tmp_msg_json"
}

cat_prompt() {
  cat <<EOF
Please generate a Git commit message in
JSON FORMAT based on the following 'git diff' output.
The JSON should have two keys: 'summary' for the summary,
and 'details' for the detailed explanation.
The 'details' value should be formatted with line breaks at appropriate
positions, aiming for approximately 80 characters per line.
-- Here is the 'git diff' output --
$(git diff --minimal --cached)
EOF
}

genai() {
  cat_prompt |
    tee >(cat >"$tmp_msg") |
    llm prompt - |
    tr -d '\n' |
    grep -m 1 -Eo '\{\s*"(summary|details)".+}' |
    jq >"$tmp_msg_json"
}

main() {
  hass "${depends[@]}"
  set -eu
  trap trap_error ERR
  trap trap_exit EXIT
  # もしコミットする変更がなければエラーを出力して終了
  git diff --cached --quiet && error "==> No changes to commit"

  genai

  local summary details
  summary=$(jq -r '.summary' "$tmp_msg_json")
  details=$(jq -r '.details' "$tmp_msg_json")
  # コミットメッセージを設定しつつエディタで開く
  git commit --edit -m "feat: $summary" -m "$details"
}
main "$@"
