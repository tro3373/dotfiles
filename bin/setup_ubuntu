#!/usr/bin/env bash

script_dir=$(
  cd "$(dirname $0)"
  pwd
)

has() { command -v ${1} >&/dev/null; }
log() { echo "$(date "%Y-%m-%d %H:%M:%S") $*" 1>&2; }

setup_dconf() {
  local k="$1"
  local v="$2"
  local tmp=$(dconf read "$k")
  if [[ "$tmp" == "$v" ]]; then
    log "==> Already dconf setuped. key=$k value=$v"
    return
  fi
  dconf reset "$k"
  dconf write "$k" "$v"
}

setup_capslocks() {
  if ! has dconf; then
    log "==> No dconf command exist."
    return
  fi
  # Cpas Lock => Ctrl setting
  setup_dconf /org/gnome/settings-daemon/plugins/keyboard/active true
  setup_dconf /org/gnome/desktop/input-sources/xkb-options "['ctrl:nocaps']"
}

setup_home_dir_names() {
  # if [ -e ~/Desktop ]; then
  #     return
  # fi
  # 日本語ディレクトリ名を英語化
  env LANGUAGE=C LC_MESSAGES=C xdg-user-dirs-gtk-update
}

setup_mount_media_setting() {
  # Disable automount external media
  gsettings set org.gnome.desktop.media-handling automount false
}

apt_update_if_needed() {
  # Chrome install
  local _update=0
  if [[ ! -e /etc/apt/sources.list.d/google-chrome.list ]]; then
    log "=> Adding apt-key For Google Chrome .."
    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
    log "=> Adding sources.list.d/google-chrome.list For Google Chrome .."
    echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee -a /etc/apt/sources.list.d/google-chrome.list >&/dev/null
    _update=1
  fi
  # Numix Icon theme
  if ! find /etc/apt/sources.list.d/numix-*list -type f >&/dev/null; then
    log "=> Adding repository ppa For Numix Icon .."
    sudo apt-add-repository -y ppa:numix/ppa
    _update=1
  fi

  # y-ppa-manager for fix GPG keys errors.
  #sudo add-apt-repository -y ppa:webupd8team/y-ppa-manager
  #sudo apt-get update
  #sudo apt-get install -y y-ppa-manager

  if [[ $_update -ne 1 ]]; then
    return
  fi

  log "=> apt-get updating .."
  sudo apt-get update
}

install_apps() {

  apt_update_if_needed

  local apps=(gnome-tweak-tool)
  while read -r line; do
    [[ -z $line ]] && continue
    [[ $line =~ ^#.* ]] && continue
    dpkg -l $line >&/dev/null && continue
    apps+=("$line")
  done < <(
    cat <<EOF
google-chrome-stable
gconf-editor
numix-gtk-theme
numix-icon-theme
numix-icon-theme-circle
meld
rapidsvn
smartmontools
hardinfo
xsel
#guake
#unity-tweak-tool
EOF
  )

  if [[ ${#apps[@]} -eq 0 ]]; then
    return
  fi

  sudo apt-get install -y "${apps[@]}"
}

install_dot_apps() {
  $script_dir/setup -e
}

setup_default_editor() {
  if ! has vim; then
    sudo apt-get install vim
  fi
  if sudo update-alternatives --get-selections | grep -E "^editor" | grep vim >&/dev/null; then
    return
  fi
  # visudo エディタをvimに設定
  sudo update-alternatives --config editor
}

enable_samartctl_sda() {
  smartctl -s on /dev/sda
}

main() {
  set -e
  setup_capslocks
  setup_home_dir_names
  setup_default_editor
  setup_mount_media_setting
  # enable_samartctl_sda
  install_apps
  install_dot_apps
}
main "$@"
