#!/usr/bin/env bash

readonly _state=$0.state

setup_home_lnk() {
  echo "==> Setting home link.."
  local u=$(whoami)
  local unxh=/c/Users/$u/.unxh
  ## Enable fstab
  # mkdir -p $unxh
  # echo "C:/Users/$u/.unxh /home/$u" >>/etc/fstab
  local scoop_persist_home=/c/Users/$u/scoop/persist/msys2/home/$u
  # echo "$scoop_persist_home /home/$u" >>/etc/fstab
  ## Enable symlink
  ln -s $scoop_persist_home /c/Users/$u/.unxh
}

update_pkgs() {
  echo "==> Updating packages.."
  echo "==> Terminal will be disapper. Next Do is Re-run bootstrap too!"
  echo "==> Press Enter to continue..(Cancel: Ctrl+C)"
  read _
  touch $_state
  pacman -Syyu pacman --noconfirm # terminal will be disapper!
}

bootstrap1() {
  echo "==> Bootstrapping 1.."
  setup_home_lnk
  update_pkgs
}

install_pkgs() {
  echo "==> Installing packages.."
  pacman -S --noconfirm \
    base-devel msys2-devel mingw-w64-i686-toolchain mingw-w64-x86_64-toolchain \
    man zsh vim git winpty svn wget sed diffutils tar zip unzip patch bc \
    mingw-w64-x86_64-ag gnu-netcat
}

setup_msys2_shell_cmd() {
  echo "==> Setting msys2 shell cmd.."
  # must?
  sed -ri -e 's,^.*(profile_d zsh),  \1\n  SHELL=/bin/zsh,g' /etc/profile
  sed -ri \
    -e 's/bash/zsh/g' \
    -e 's/rem set MSYS=win/set MSYS=win/g' \
    /msys2_shell.cmd
}

setup_dot() {
  echo "==> Cloning dot.."
  curl -fSsL git.io/tr3s | bash
}

bootstrap2() {
  echo "==> Bootstrapping 2.."
  install_pkgs
  setup_msys2_shell_cmd
  setup_dot
}

main() {
  export MSYS=winsymlinks:nativestrict # enable symbolic link in admined msys
  if [[ ! -e $_state ]]; then
    bootstrap1
    return
  fi
  bootstrap2
}
main "$@"
