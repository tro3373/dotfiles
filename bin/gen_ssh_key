#!/usr/bin/env bash

command_name=$(basename $0)
args=()
rm_pass=0
rm_force=0

usage() {
  cat <<EOF
Generate sshkey
  Usage:
      $command_name [option] [key file path]
    Options
      -h|--help:
        Show this usage
      -e=<email>|--email=<email>:
        specify email
      -f=<file>|--file=<file>:
        specify key file
          If run with -r option, use as load file,
          Else use as generated to.
      -r|--rm:
        specify rm passphrase file
      -rf|--rmf:
        specify rm passphrase file force
EOF
}

has() { command -v ${1} >&/dev/null; }
add_args() { args=("${args[@]}" "$@"); }
#add_args() { args+=("$@"); }

initialize() {
  while true; do
    [[ -z $1 ]] && break
    case "$1" in
      -h | --help) usage && exit 0 ;;
      -e=* | --email=*) email=${1#*=} ;;
      -e | --email)
        shift
        email=$1
        ;;
      -f=* | --file=*) file=${1#*=} ;;
      -f | --file)
        shift
        file=$1
        ;;
      -r | -rm | --rm) rm_pass=1 ;;
      -rf | -rmf | --rmf)
        rm_pass=1
        rm_force=1
        ;;
      *) file="$1" ;;
    esac
    shift
  done
  file=${file:-id_rsa}
  email_opt=
  [[ -n $email ]] && email_opt="-C $email"
  # all_args="${args[@]}"
}

rm_pass_phrase() {
  local file=$1
  local dst=$file.nopass
  if [[ ! -e $file ]]; then
    echo "No such file exists. $file" 1>&2
    exit 1
  fi
  if [[ -e $dst && $rm_force -ne 1 ]]; then
    echo "dest file exists. $dst" 1>&2
    exit 1
  fi
  local precmd=
  if [[ $OSTYPE == msys ]]; then
    precmd=winpty
  fi
  if head $file | grep 'BEGIN OPENSSH PRIVATE KEY' >&/dev/null; then
    # MEMO: ssh-keygen orverwride file
    # -m pem: Old version output
    cp -p $file $dst
    $precmd ssh-keygen -p -m pem -N "" -f $dst
  else
    $precmd openssl rsa -in $file -out $dst
  fi
  chmod 600 $dst
  echo "==> No pass key generated. $dst"
  if [[ $rm_force -ne 1 ]]; then
    local answer="hoge"
    while [[ ! $answer =~ [yYnN] ]]; do
      echo "===> overwrite to $file ?(yn)"
      read answer
    done
    if [[ $answer =~ [nN] ]]; then
      return
    fi
  fi
  mv -vf $dst $file
  echo "==> $file orverwrited by nopass key"
}

main() {
  initialize "$@"
  set -eu
  if [[ $rm_pass -eq 1 ]]; then
    rm_pass_phrase $file
  else
    local optm=
    if is_newer_openssh; then
      optm="-m pem"
    fi
    ssh-keygen -t rsa -b 4096 -f $file $email_opt $optm
  fi
}
main "$@"
