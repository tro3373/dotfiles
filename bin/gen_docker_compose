#!/usr/bin/env bash

cat_compose() {
  cat <<'EOF'
version: '3.8'
services:
  db:
    image: mongo:latest
    container_name: db
    restart: always
    volumes:
      - db-volume:/data/db
    ports:
      - 27017:27017
    environment:
      TZ: Asia/Tokyo
      # # see https://qiita.com/homines22/items/038dc08fca6405813e0b
      # - MONGO_INITDB_ROOT_USERNAME=root
      # - MONGO_INITDB_ROOT_PASSWORD=root
      # - MONGO_INITDB_DATABASE=test
    command: mongod --replSet devReplSet
  nginx:
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    environment:
      TZ: Asia/Tokyo
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  app:
    image: app:1.0.0
    build:
      context: ./src
    container_name: app
    links:
      - db:db
    command: 'tail -f /dev/null'
    working_dir: /works/
    volumes:
      - ./src/:/works/
    environment:
      - TZ=Asia/Tokyo
    tty:
      true

# volumes:
#   db-volume:
#     driver: 'local'
EOF
}
cat_makefile() {
  cat <<'EOF'
CONTAINERNAME=app
VERSION=1.0.0

all_container=$$(docker ps -a -q)
active_container=$$(docker ps -q)
images=$$(docker images | awk '/^<none>/ { print $$3 }')
local_ip=$$(ip route |grep kernel |awk 'END {print $$NF}')

#.PHONY: all test clean
#default: build
.DEFAULT_GOAL := build

build:
	docker-compose build

up: start
start:
	docker-compose up -d && docker-compose logs
stop: down
down:
	docker-compose down
restart: stop start

console: attach
attach:
	docker exec -it $(CONTAINERNAME) /bin/bash --login
do:
	docker exec -it $(CONTAINERNAME) /works/app

logs:
	docker-compose logs
logsf:
	docker-compose logs -f

clean: clean_container clean_images
clean_images:
	@if [ "$(images)" != "" ] ; then \
		docker rmi $(images); \
	fi
clean_container:
	@for a in $(all_container) ; do \
		for b in $(active_container) ; do \
			if [ "$${a}" = "$${b}" ] ; then \
				continue 2; \
			fi; \
		done; \
		docker rm $${a}; \
	done
EOF
}

main() {
  cat_compose | gen ./docker-compose.yml
  cat_makefile | gen ./Makefile
}
main "$@"
