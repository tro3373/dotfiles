#!/usr/bin/env bash

# readonly current_dir=$(pwd)
# readonly script_dir=$(
#   cd "$(dirname ${BASH_SOURCE:-$0})"
#   pwd
# )
readonly command_name=$(basename $0)
readonly conf=$HOME/.vpn
server=0
with_proxy=1

has() { command -v ${1} >&/dev/null; }

# args=()
usage() {
  cat <<EOF

  Run vpn connection via openconnect.

  Usage:
    $command_name [option]
  Options
    -h|--help   : Show this usage
    -g|--gen    : Generate config file to $conf
    -s|--server : Run vpn ssh server in docker(default use local openconnect command)

EOF
}

initialize() {
  while true; do
    [[ -z $1 ]] && break
    case "$1" in
      -h | --help) usage && exit 0 ;;
      -g | --gen) gen_conf && exit 0 ;;
      -s | --server) server=1 ;;
    esac
    shift
  done
  check
}

check() {
  ! test -e $conf && echo "No conf exists. path=$conf" 1>&2 && exit 1
  if [[ $server -eq 1 ]]; then
    ! has docker && echo "No docker exists." 1>&2 && exit 1
  else
    ! has openconnect && echo "No openconnect exists." 1>&2 && exit 1
  fi
}

gen_conf() {
  test -e $conf && echo "Already conf exists. path=$conf" 1>&2 && exit 1
  cat <<EOF >$conf
vpn_srv=example.com
vpn_usr=example_user
vpn_pwd=example_pwd
vpn_opt="--no-cert-check"
EOF
  echo "Generated to $conf. edit it."
}

run_server() {
  # --entrypoint '' \
  # /bin/bash
  vpn_opt="--no-cert-check" # docker version opt notwork. so orverride it
  # shellcheck disable=SC2154
  docker run -it --rm --privileged \
    -p 127.0.0.1:22222:22 \
    -e SSH_PUB="$(cat <$HOME/.ssh/id_rsa.pub)" \
    -e SERVER="$vpn_srv" \
    -e OPTIONS="-u $vpn_usr $vpn_opt" \
    -e PASSWORD="$vpn_pwd" \
    jasimpson/openconnect-openssh
}

run_local() {
  # --passwd-on-stdin \
  echo "$vpn_pwd" |
    sudo openconnect -u $vpn_usr $vpn_opt $vpn_srv
}

run_proxy() {
  ! has gost && return
  [[ $with_proxy -ne 1 ]] && return
  local _ip=$(ipeth0)
  local _port=5963
  echo "==> Running proxy $_ip:$_port .." | ink yellow
  gost -L=:$_port #|& ink yellow
}

main() {
  initialize "$@"
  source $conf
  run_proxy &
  if [[ $server -eq 1 ]]; then
    run_server
    return
  fi
  run_local
  wait
}
main "$@"
