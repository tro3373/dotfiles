#!/usr/bin/env bash

debug=0
use_wingit=0
use_msys_env=1

dlog() {
  if [ $debug -eq 1 ]; then
    echo "gvim debug: $*"
  fi
}
hasp() { command -p -v "${1}" >&/dev/null; }
is_msys() { test "${OSTYPE}" == "msys"; }
is_win() { os wsl || is_msys; }
change() {
  if is_msys; then
    cygpath -aw "$*"
  else
    wslpath -aw "$*"
  fi
}
changes() {
  local tmp=
  for v in "$@"; do
    tmp="$tmp $(change "$v")"
  done
  echo "$tmp"
}
winpath=
add_winpath() {
  local str="$*"
  local IFS=:
  local arr=("$str")
  unset IFS
  local path
  for path in "${arr[@]}"; do
    local tmp
    tmp="$(change "$path")"
    winpath="$tmp;$winpath"
    dlog "$path ==> $tmp"
  done
}

set_msys_env() {
  # Msys path/shell ==> So Buggie...
  # $WINHOME/AppData/Local/Temp
  # TMP=$ORIGINAL_TMP
  # TEMP=$ORIGINAL_TEMP
  :
}

set_win_env() {
  # Windows path/shell
  # $PROGRAMFILES,$LOCALAPPDATA is not working
  add_winpath "$ORIGINAL_PATH"

  # git setting
  local wingit="/c/Program Files/Git/cmd"
  if [[ $use_wingit -eq 1 && -e $wingit ]]; then
    add_winpath "$wingit"
  else
    add_winpath "/usr/bin/" # msys git
  fi

  add_winpath "/mingw64/bin" # For silver searcher ag
  add_winpath "$WINHOME/bin" # local bin command path

  # HOME="$(change "$HOME")"
  _tmp="$(change "$WINHOME/AppData/Local/Temp")"
  _dotpath="$(change "$DOTPATH")"
  export HOME=
  export SHELL=
  export TMP="$_tmp"
  export TEMP="$TMP"
  export LANGUAGE=ja_JP.UTF-8
  export DOTPATH="$_dotpath"
  export PATH="$winpath"
}

main() {
  set -eu
  if ! is_win; then
    if ! hasp gvim; then
      echo "No gvim command exist." 1>&2
      exit 1
    fi
    command -p gvim "$@"
    return 0
  fi

  local args="$*"
  if [ "$args" = "" ]; then
    #args=$(change "$(pwd)")
    # args=$(pwd)
    args=$WINHOME
  fi
  args="$(changes "$args")"

  if [[ $use_msys_env -eq 1 ]]; then
    set_msys_env
  else
    set_win_env
  fi
  dlog "AllPath: ==> $winpath"
  dlog "Args: =====> $args"
  "$WINHOME/scoop/apps/vim-kaoriya/current/gvim.exe" --remote-tab-silent "$args" &
}
main "$@"
