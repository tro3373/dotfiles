#!/usr/bin/env bash

current_dir=$(pwd)
script_dir=$(cd $(dirname $0); pwd)
script_name=$(basename $0)

tsv_format="%s\t\t\t\t\t\t\t\t\t%s\t\t\t\t%s\t\t\t\t\t\t%s\n"
is_out_file=0
out_dir_root=$current_dir/${script_name}.out

has() { which ${1} >& /dev/null; }
trim() {
    echo $* |sed 's/^[[:blank:]]*//;s/[[:blank:]]*$//'
}
type_to_ja(){
    case "$*" in
        String)         echo "文字列";;
        String\[\])     echo "配列（文字列）";;
        int|Integer)    echo "数値";;
        Date)           echo "日時";;
        *) ;;
    esac
}
clear() {
    f_name_ja=
    fa_size=
    f_name=
    f_type_rq=
    f_type_ja=
    f_type_dsp=
}
for_file() {
    local file="$*"
    if [[ ! -e $file ]]; then
        echo "No such file exists. $file" 1>&2
        return
    fi
    if [[ $is_out_file -eq 1 ]]; then
        local out_file=$out_dir_root/"$(echo $file |sed -e 's|^[./]\+||g')".tsv
        [[ -e $out_file ]] && rm $out_file
        mkdir -p $(dirname $out_file) && touch $out_file
        echo "=> $file to $out_file"
    else
        echo "=> $file"
    fi

    # 抽出開始行特定：クラス開始位置 `class`
    local start=$(($(grep --line-number " class " $file |cut -d":" -f1)+1))
    # 抽出終了行特定：メソッド開始位置 `(){`
    local end=$(($(cat $file |sed -e "s/ //g" |grep --line-number "(){" |head -1|cut -d":" -f1)-1))
    # 指定行間を抽出& `*/` `--` `**` を削除
    for line in $(sed ''$start','$end'!d' $file |grep -v "\*/" |grep -v "\-\-" |grep -v "\*\*"); do
        local tmp=$(trim "$line")
        case "$tmp" in
            '*'*)
                # フィールド日本語名
                f_name_ja=$(echo $tmp |tr -d ' *')
                ;;
            @*)
                # アノテーションより属性値取得
                if [[ "$tmp" == "@NotEmpty" ]] || [[ "$tmp" == "@NotNull" ]]; then
                    f_type_rq="○"
                else
                    fa_size=$(echo $tmp |cut -d"=" -f2 |tr -d " )")
                fi
                ;;
            private*)
                # フィールド名、フィールドタイプ
                f_name=$(echo $tmp |tr -d ';'|awk '{print $3}')
                f_type_ja=$(type_to_ja "$(echo $tmp |awk '{print $2}')")

                f_type_dsp=$f_type_ja
                [[ -n $fa_size ]] && f_type_dsp="$f_type_dsp($fa_size)"

                # 1行出力
                local out_line=$(printf "$tsv_format" "$f_name_ja" "$f_name" "$f_type_dsp" "$f_type_rq")
                clip_message="$clip_message$out_line\n"
                if [[ $is_out_file -eq 1 ]]; then
                    echo -ne $out_line |tee -a $out_file
                else
                    : #echo -ne $out_line
                fi
                clear
                ;;
            *) ;;
        esac
    done
}
for_dir() {
    for ff in $(find "$*"); do
        [[ $ff == $* ]] && continue
        [[ -f $ff ]] && for_file "$ff"
        [[ -d $ff ]] && for_dir "$ff"
    done
}
initialize() {
    if [[ ! -e $out_dir_root ]]; then
        :
    fi
}
main() {
    [[ $# -eq 0 ]] && echo "Specify file path." 1>&2 && exit 1
    initialize
    IFS=$'\n'
    for f in "$@"; do
        [[ ! -e "$f" ]] && continue;
        [[ -f $f ]] && for_file "$f"
        [[ -d $f ]] && for_dir "$f"
    done
    if [[ $is_out_file -ne 1 ]]; then
        #echo -ne "$clip_message" 
        echo -ne "$clip_message\n" >/dev/clipboard
    fi
}

main "$@"

