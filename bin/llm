#!/usr/bin/env -S bash -e

readonly depends=(tgpt gemini-cli)
has() { command -v "${1}" >&/dev/null; }
hass() { for arg in "$@"; do has "$arg" || error "==> No $arg command exist."; done; }
_ink() { cat - | if has ink; then ink "$@"; else cat -; fi; }
# shellcheck disable=SC2145
_log() { echo "$(date +"%Y-%m-%d %H:%M:%S") ${@:2}" | _ink "$1"; }
log() { _log white "$*"; }
info() { _log cyan "$*"; }
warn() { _log yellow "$*"; }
error() { _log red "$*" && exit 1; }
fire() {
  if [[ -p /dev/stdin ]]; then
    cat -
  fi
  if [[ $# -ne 0 ]]; then
    echo "$@"
  fi
}

_llm() {
  mode=gemini-cli
  mode=tgpt
  # mode=claude
  cat - |
    if [[ $mode == "tgpt" ]]; then
      # ## aandrew-me/tgpt: AI Chatbots in terminal without needing API keys
      # - https://github.com/aandrew-me/tgpt?tab=readme-ov-file
      # ### Provider
      # - deepseek, gemini, groq, isou, koboldai, ollama, openai, pollinations and phind(default)
      # ### Provider Groq
      # - Supported Models - GroqDocs
      #   - https://console.groq.com/docs/models
      # provider=groq model=gemma2-9b-it API_KEY=$GROQ_API_KEY
      provider=gemini model=gemini-2.5-flash-preview-05-20 API_KEY=$GEMINI_API_KEY
      command tgpt --quiet --provider $provider --model $model --key "$API_KEY"
    # elif [[ $mode == "claude" ]]; then
    #   command claude -p
    else
      model=gemini-2.5-flash-preview-05-20
      # model=gemini-2.5-pro-preview-05-06
      command gemini-cli prompt --model $model -
    fi
}

main() {
  hass "${depends[@]}"
  if [[ $# -eq 0 && ! -p /dev/stdin ]]; then
    error "==> No input data."
  fi
  fire "$@" | _llm
}
main "$@"
