#!/usr/bin/env -S bash -e

command_name=$(basename "$0") && readonly command_name
current_dir=$(pwd) && readonly current_dir

args=()

src_file=
keyword=

usage() {
  cat <<EOF

Divide ddl file via specified keyword(default: 'DROP')

Usage:
    $command_name [Options] <file> <keyword(default: 'DROP')>
  Options
    -h|--help : Show this usage

EOF
}
initialize() {
  while true; do
    [[ -z $1 ]] && break
    case "$1" in
      -h | --help) usage && exit 0 ;;
      #-f*|--file*) file=${1#*=} ;;
      #-f|--file) shift && file=$1 ;;
      *) add_args "$1" ;;
    esac
    shift
  done
  src_file=${args[0]}
  keyword=${args[1]}
  if [[ -z $keyword ]]; then
    keyword=DROP
  fi
  check
}
add_args() { args+=("$@"); }
check() {
  if [[ ! -e $src_file ]]; then
    usage
    error "==> Specify Exists file. $src_file"
  fi
  if [[ -z $keyword ]]; then
    usage
    error "==> Specify keyword"
  fi
}

has() { command -v "${1}" >&/dev/null; }
_ink() { cat - | if has ink; then ink "$@"; else cat -; fi; }
# shellcheck disable=SC2145
_log() { echo "$(date +"%Y-%m-%d %H:%M:%S") ${@:2}" | _ink "$1"; }
log() { _log white "$*"; }
info() { _log cyan "$*"; }
warn() { _log yellow "$*"; }
error() { _log red "$*" && exit 1; }

cat_ddl_start_end_no() {
  local p
  {
    cat <"$src_file"
    echo "$keyword _______________dummy_______________"
  } |
    grep -n "$keyword" |
    cut -d: -f1 |
    while read -r no; do
      [[ -z $no ]] && continue
      [[ $no =~ ^#.* ]] && continue
      [[ -z $p ]] && p=$no && continue
      echo "$p $((no - 1))"
      p=$no
    done
}

cat_drop_sql() {
  sed -n "${start}p" "$src_file"
}
get_table_name_from_drop_sql_line() {
  sed -e 's,^.* ,,' -e 's,[`;],,g'
}
cat_table_ddl() {
  sed -n "${start},${end}p" "$src_file"
}

main() {
  initialize "$@"
  cat_ddl_start_end_no |
    while read -r start end; do
      local dst table_name
      table_name=$(cat_drop_sql | get_table_name_from_drop_sql_line)
      dst="$current_dir/$table_name.sql"
      info "==> Generating $dst .."
      cat_table_ddl >"$dst"
    done
}
main "$@"
