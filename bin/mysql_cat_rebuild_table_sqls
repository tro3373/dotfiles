#!/usr/bin/env bash

tables() {
  echo -e "$stdin" |
    grep -n DROP |
    sed -e 's,:.* `, ,g' -e 's,`;,,g' |
    while read -r n table; do
      [[ -z $n ]] && continue
      [[ $n =~ ^#.* ]] && continue
      echo $((n - 1))
      printf "$table $n "
    done |
    tail -n +2
  echo
}

divide() {
  tables |
    while read -r table sta end; do
      [[ -z $table ]] && continue
      [[ $table =~ ^#.* ]] && continue
      # echo $table $sta $end
      local rows=$((end - sta))
      echo -e "$stdin" |
        tail -n +$sta |
        if [[ -z $end ]]; then
          cat -
        else
          cat - | head -$rows
        fi >$work_dir/$table.sql
    done
}

cols() {
  # shellcheck disable=SC2016
  local _cols=$(
    grep -E '^ *`' $tablef |
      cut -d\` -f2 |
      tr '\n' '@' |
      sed -e 's/@/`,`/g'
  )
  _cols=\`$_cols
  _cols=${_cols%,\`}
  echo $_cols
}

cat_rebuild_sqls() {
  find $work_dir/*sql -type f |
    # head -1 |
    while read -r tablef; do
      [[ -z $tablef ]] && continue
      [[ $tablef =~ ^#.* ]] && continue
      local table=$(basename ${tablef%.sql})
      local table_bk=${table}_bk
      echo
      echo "drop table if exists $table_bk;"
      echo "create table $table_bk as select * from $table;"
      cat <$tablef
      local cols=$(cols)
      echo "insert into $table($cols) select $cols from $table_bk;"
    done
}

main() {
  local stdin
  stdin=
  if [[ -p /dev/stdin ]]; then
    stdin="$(cat <&0)"
  fi
  if [[ -z $stdin && $# -ne 0 ]]; then
    stdin="$(cat <"$*")"
  fi
  if [[ -z $stdin ]]; then
    echo "Specify stdin or input file arg"
    exit 1
  fi
  set -euo pipefail
  work_dir=$(mktemp -d)
  divide
  cat_rebuild_sqls
}
main "$@"
