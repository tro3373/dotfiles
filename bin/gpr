#!/bin/bash

target=$1
_exe() {
  cmd=$*
  # rc=1
  # result=
  echo "==> $cmd"
  # result=$($cmd 2>&1) && rc=0
  # if [[ $rc -ne 0 ]]; then
  if ! $cmd; then
    echo "!!Abort!! while updating $target cmd: $cmd"
    # echo "      ==> $result"
    exit 1
  fi
}
is_git_svned_repo() {
  [ -e "$(git rev-parse --show-toplevel)/.git/svn" ]
}
is_inside_repo() {
  git rev-parse --is-inside-work-tree >/dev/null 2>&1
}
main() {
  ! is_inside_repo && echo "Not in repository." 1>&2 && exit 1
  if [[ ! -z $target ]]; then
    cd $target
  fi
  local modified=$(git status -s)
  local stash=0
  # local stash_msg=""
  if [[ "$modified" != "" ]]; then
    # local shuld_stash=$(echo "$modified" | grep -v '??' | wc -l)
    local shuld_stash=$(echo "$modified" | grep -c -v '??')
    if [[ $shuld_stash -gt 0 ]]; then
      stash=1
      # stash_msg="(with_stash)"
      _exe git stash -q
    fi
  fi
  if is_git_svned_repo; then
    _exe git svn rebase
  else
    _exe git pull --rebase
  fi
  # local nochanged=$(echo "$result" | grep "up to date" | wc -l)
  # local update_msg="up-to-date"
  # if [[ $nochanged -eq 0 ]]; then
  #     update_msg="pulled"
  # fi
  if [[ $stash -eq 1 ]]; then
    _exe git stash pop -q
  fi
  # echo "==> Success to update ($update_msg) $stash_msg $target"
  if [[ "$modified" != "" ]]; then
    echo "$modified"
  fi
  if [[ ! -z $target ]]; then
    cd - >/dev/null 2>&1
  fi
}
main "$@"

